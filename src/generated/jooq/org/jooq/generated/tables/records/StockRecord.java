/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.generated.tables.Stock;
import org.jooq.generated.tables.interfaces.IStock;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.stock</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StockRecord extends UpdatableRecordImpl<StockRecord> implements Record5<Integer, String, String, Double, Timestamp>, IStock {

    private static final long serialVersionUID = -1812620342;

    /**
     * Setter for <code>public.stock.id</code>.
     */
    public StockRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.stock.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.stock.symbol</code>.
     */
    public StockRecord setSymbol(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.stock.symbol</code>.
     */
    @Override
    public String getSymbol() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.stock.name</code>.
     */
    public StockRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.stock.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.stock.price</code>.
     */
    public StockRecord setPrice(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.stock.price</code>.
     */
    @Override
    public Double getPrice() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.stock.deleted</code>.
     */
    public StockRecord setDeleted(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.stock.deleted</code>.
     */
    @Override
    public Timestamp getDeleted() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Double, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Double, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Stock.STOCK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Stock.STOCK.SYMBOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Stock.STOCK.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Stock.STOCK.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Stock.STOCK.DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSymbol();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSymbol();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StockRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StockRecord value2(String value) {
        setSymbol(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StockRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StockRecord value4(Double value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StockRecord value5(Timestamp value) {
        setDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StockRecord values(Integer value1, String value2, String value3, Double value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IStock from) {
        setId(from.getId());
        setSymbol(from.getSymbol());
        setName(from.getName());
        setPrice(from.getPrice());
        setDeleted(from.getDeleted());
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StockRecord
     */
    public StockRecord() {
        super(Stock.STOCK);
    }

    /**
     * Create a detached, initialised StockRecord
     */
    public StockRecord(Integer id, String symbol, String name, Double price, Timestamp deleted) {
        super(Stock.STOCK);

        set(0, id);
        set(1, symbol);
        set(2, name);
        set(3, price);
        set(4, deleted);
    }
}
